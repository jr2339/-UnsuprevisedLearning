segs.dt
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
changepoint.dt <- total.dt[,c("end_in_all_data","type")]
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end[-.N]), by=.(type, segments) ]
change.dt <- data.table(sdt1, pro.dt[1 < start])
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
changepoint.dt <- total.dt[,c("end_in_all_data","type")]
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end[-.N]), by=.(type, segments) ]
change.dt <- data.table(total.dt, pro.dt[1 < start])
library(ggplot2)
library(data.table)
data(neuroblastoma, package="neuroblastoma")
pro.dt <- data.table(neuroblastoma$profiles)[profile.id=="79" & chromosome=="2"]
pro.dt[, set := rep(rep(c("subtrain","validation"), each=10), l=.N)]
pro.dt[, index := 1:.N]
subtrain.dt <- pro.dt[set=="subtrain"]
validation.dt <- pro.dt[set== "validation"]
str(subtrain.dt)
subtrain.binseg.models <- binsegRcpp::binseg_normal(subtrain.dt$logratio, 10)
subtrain.binseg.dt <- coef(subtrain.binseg.models)
subtrain.getPos <- function(subtrain.index){
orig.index <- subtrain.dt$index[ subtrain.index ]
pro.dt$position[ orig.index ]
}
subtrain.binseg.dt[, start_in_all_data := subtrain.getPos(subtrain.binseg.dt$start)]
subtrain.binseg.dt[, end_in_all_data := subtrain.getPos(subtrain.binseg.dt$end)]
subtrain.binseg.dt[, type := rep("subtrain", l=.N)]
head(subtrain.binseg.dt)
validation.binseg.models <- binsegRcpp::binseg_normal(validation.dt$logratio, 10)
validation.binseg.dt <- coef(validation.binseg.models)
validation.getPos <- function(validation.index){
orig.index <- validation.dt$index[ validation.index ]
pro.dt$position[orig.index ]
}
validation.binseg.dt[, start_in_all_data := validation.getPos(validation.binseg.dt$start)]
validation.binseg.dt[, end_in_all_data := validation.getPos(validation.binseg.dt$end)]
validation.binseg.dt[, type := rep("validation", l=.N)]
head(validation.binseg.dt)
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
changepoint.dt <- total.dt[,c("end_in_all_data","type")]
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end[-.N]), by=.(type, segments) ]
change.dt <- data.table(pro.dt, pro.dt[1 < start])
total.dt[, end.before := c(NA, end[-.N]), by=.(type, segments) ]
change.dt <- data.table(pro.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=changepoint.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
change.dt
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
changepoint.dt <- total.dt[,c("end_in_all_data","type")]
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end_in_all_data[-.N]), by=.(type, segments) ]
change.dt <- data.table(pro.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=changepoint.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
change.dt
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
changepoint.dt <- total.dt[,c("end_in_all_data","type")]
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end_in_all_data[-.N]), by=.(type, segments) ]
change.dt <- data.table(total.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
change.dt
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=changepoint.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
# changepoint.dt <- total.dt[,c("end_in_all_data","type")]
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end_in_all_data[-.N]), by=.(type, segments) ]
change.dt <- data.table(total.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
change.dt
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=changepoint.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
changepoint.dt <- total.dt[,c("segments","end_in_all_data","type")]
change.dt
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
# changepoint.dt <- total.dt[,c("end_in_all_data","type")]
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end_in_all_data[-.N]), by=.(type, segments) ]
change.dt <- data.table(pro.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=change.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
library(ggplot2)
library(data.table)
data(neuroblastoma, package="neuroblastoma")
pro.dt <- data.table(neuroblastoma$profiles)[profile.id=="79" & chromosome=="2"]
pro.dt[, set := rep(rep(c("subtrain","validation"), each=10), l=.N)]
pro.dt[, index := 1:.N]
subtrain.dt <- pro.dt[set=="subtrain"]
validation.dt <- pro.dt[set== "validation"]
str(subtrain.dt)
subtrain.binseg.models <- binsegRcpp::binseg_normal(subtrain.dt$logratio, 10)
subtrain.binseg.dt <- coef(subtrain.binseg.models)
subtrain.getPos <- function(subtrain.index){
orig.index <- subtrain.dt$index[ subtrain.index ]
pro.dt$position[ orig.index ]
}
subtrain.binseg.dt[, start_in_all_data := subtrain.getPos(subtrain.binseg.dt$start)]
subtrain.binseg.dt[, end_in_all_data := subtrain.getPos(subtrain.binseg.dt$end)]
subtrain.binseg.dt[, type := rep("subtrain", l=.N)]
head(subtrain.binseg.dt)
validation.binseg.models <- binsegRcpp::binseg_normal(validation.dt$logratio, 10)
validation.binseg.dt <- coef(validation.binseg.models)
validation.getPos <- function(validation.index){
orig.index <- validation.dt$index[ validation.index ]
pro.dt$position[orig.index ]
}
validation.binseg.dt[, start_in_all_data := validation.getPos(validation.binseg.dt$start)]
validation.binseg.dt[, end_in_all_data := validation.getPos(validation.binseg.dt$end)]
validation.binseg.dt[, type := rep("validation", l=.N)]
head(validation.binseg.dt)
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end_in_all_data[-.N]), by=.(type, segments) ]
change.dt <- data.table(total.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=change.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end_in_all_data[-.N]), by=.(type, segments) ]
change.dt <- data.table(pro.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
change.dt
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=change.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
loss.dt <- rbind(subtrain.binseg.models$loss,validation.binseg.models$loss)
(loss.dt <- rbind(subtrain.binseg.models$loss,validation.binseg.models$loss))
(loss.dt <- cbind(subtrain.binseg.models$loss,validation.binseg.models$loss))
subtrain.loss.dt[, loss := subtrain.binseg.models$loss]
subtrain.loss.dt <- list()
subtrain.loss.dt <- list()
validation.loss.dt <- list()
subtrain.loss.dt[, loss := subtrain.binseg.models$loss]
subtrain.loss.dt<- data.table()
validation.loss.dt <- data.table()
subtrain.loss.dt[, loss := subtrain.binseg.models$loss]
subtrain.loss.dt[, segments := subtrain.binseg.models$segments]
validation.loss.dt[, loss := validation.binseg.models$loss]
validation.loss.dt[, segments := validation.binseg.models$segments]
(loss.dt <- rbind(subtrain.loss.dt,validation.loss.dt))
subtrain.loss.dt<- data.table()
validation.loss.dt <- data.table()
subtrain.loss.dt[, loss := subtrain.binseg.models$loss]
subtrain.loss.dt[, segments := subtrain.binseg.models$segments]
subtrain.loss.dt[, type := "subtrain"]
validation.loss.dt[, loss := validation.binseg.models$loss]
validation.loss.dt[, segments := validation.binseg.models$segments]
validation.loss.dt[, type := "validation"]
(loss.dt <- rbind(subtrain.loss.dt,validation.loss.dt))
ggplot()+
geom_line(aes(
segments, loss, color=type),
data=loss.dt)+
xlab("the number of segments") + ylab("the loss value")
library(ggplot2)
library(data.table)
data(neuroblastoma, package="neuroblastoma")
pro.dt <- data.table(neuroblastoma$profiles)[profile.id=="79" & chromosome=="2"]
pro.dt[, set := rep(rep(c("subtrain","validation"), each=4), l=.N)]
pro.dt[, index := 1:.N]
subtrain.dt <- pro.dt[set=="subtrain"]
validation.dt <- pro.dt[set== "validation"]
str(subtrain.dt)
subtrain.binseg.models <- binsegRcpp::binseg_normal(subtrain.dt$logratio, 10)
subtrain.binseg.dt <- coef(subtrain.binseg.models)
subtrain.getPos <- function(subtrain.index){
orig.index <- subtrain.dt$index[ subtrain.index ]
pro.dt$position[ orig.index ]
}
subtrain.binseg.dt[, start_in_all_data := subtrain.getPos(subtrain.binseg.dt$start)]
subtrain.binseg.dt[, end_in_all_data := subtrain.getPos(subtrain.binseg.dt$end)]
subtrain.binseg.dt[, type := rep("subtrain", l=.N)]
head(subtrain.binseg.dt)
validation.binseg.models <- binsegRcpp::binseg_normal(validation.dt$logratio, 10)
validation.binseg.dt <- coef(validation.binseg.models)
validation.getPos <- function(validation.index){
orig.index <- validation.dt$index[ validation.index ]
pro.dt$position[orig.index ]
}
validation.binseg.dt[, start_in_all_data := validation.getPos(validation.binseg.dt$start)]
validation.binseg.dt[, end_in_all_data := validation.getPos(validation.binseg.dt$end)]
validation.binseg.dt[, type := rep("validation", l=.N)]
head(validation.binseg.dt)
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end_in_all_data[-.N]), by=.(type, segments) ]
change.dt <- data.table(pro.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
change.dt
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=change.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
subtrain.loss.dt<- data.table()
validation.loss.dt <- data.table()
subtrain.loss.dt[, loss := subtrain.binseg.models$loss]
subtrain.loss.dt[, segments := subtrain.binseg.models$segments]
subtrain.loss.dt[, type := "subtrain"]
validation.loss.dt[, loss := validation.binseg.models$loss]
validation.loss.dt[, segments := validation.binseg.models$segments]
validation.loss.dt[, type := "validation"]
(loss.dt <- rbind(subtrain.loss.dt,validation.loss.dt))
ggplot()+
geom_line(aes(
segments, loss, color=type),
data=loss.dt)+
xlab("the number of segments") + ylab("the loss value")
library(ggplot2)
library(data.table)
data(neuroblastoma, package="neuroblastoma")
pro.dt <- data.table(neuroblastoma$profiles)[profile.id=="79" & chromosome=="2"]
pro.dt[, set := rep(rep(c("subtrain","validation"), each=1), l=.N)]
pro.dt[, index := 1:.N]
subtrain.dt <- pro.dt[set=="subtrain"]
validation.dt <- pro.dt[set== "validation"]
str(subtrain.dt)
subtrain.binseg.models <- binsegRcpp::binseg_normal(subtrain.dt$logratio, 10)
subtrain.binseg.dt <- coef(subtrain.binseg.models)
subtrain.getPos <- function(subtrain.index){
orig.index <- subtrain.dt$index[ subtrain.index ]
pro.dt$position[ orig.index ]
}
subtrain.binseg.dt[, start_in_all_data := subtrain.getPos(subtrain.binseg.dt$start)]
subtrain.binseg.dt[, end_in_all_data := subtrain.getPos(subtrain.binseg.dt$end)]
subtrain.binseg.dt[, type := rep("subtrain", l=.N)]
head(subtrain.binseg.dt)
validation.binseg.models <- binsegRcpp::binseg_normal(validation.dt$logratio, 10)
validation.binseg.dt <- coef(validation.binseg.models)
validation.getPos <- function(validation.index){
orig.index <- validation.dt$index[ validation.index ]
pro.dt$position[orig.index ]
}
validation.binseg.dt[, start_in_all_data := validation.getPos(validation.binseg.dt$start)]
validation.binseg.dt[, end_in_all_data := validation.getPos(validation.binseg.dt$end)]
validation.binseg.dt[, type := rep("validation", l=.N)]
head(validation.binseg.dt)
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end_in_all_data[-.N]), by=.(type, segments) ]
change.dt <- data.table(pro.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
change.dt
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=change.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
subtrain.loss.dt<- data.table()
validation.loss.dt <- data.table()
subtrain.loss.dt[, loss := subtrain.binseg.models$loss]
subtrain.loss.dt[, segments := subtrain.binseg.models$segments]
subtrain.loss.dt[, type := "subtrain"]
validation.loss.dt[, loss := validation.binseg.models$loss]
validation.loss.dt[, segments := validation.binseg.models$segments]
validation.loss.dt[, type := "validation"]
(loss.dt <- rbind(subtrain.loss.dt,validation.loss.dt))
ggplot()+
geom_line(aes(
segments, loss, color=type),
data=loss.dt)+
xlab("the number of segments") + ylab("the loss value")
subtrain.loss.dt<- data.table()
validation.loss.dt <- data.table()
subtrain.loss.dt[, loss := subtrain.binseg.models$loss]
subtrain.loss.dt[, segments := subtrain.binseg.models$segments]
subtrain.loss.dt[, type := "subtrain"]
validation.loss.dt[, loss := validation.binseg.models$loss]
validation.loss.dt[, segments := validation.binseg.models$segments]
validation.loss.dt[, type := "validation"]
loss.dt <- rbind(subtrain.loss.dt,validation.loss.dt)
ggplot()+
geom_line(aes(
segments, loss, color=type),
data=loss.dt)+
xlab("the number of segments") + ylab("the loss value")
pro.dt <- data.table(neuroblastoma$profiles)[profile.id=="79" & chromosome=="2"]
pro.dt[, set := rep(rep(c("subtrain","validation"), each=2), l=.N)]
pro.dt[, index := 1:.N]
subtrain.dt <- pro.dt[set=="subtrain"]
validation.dt <- pro.dt[set== "validation"]
str(subtrain.dt)
subtrain.binseg.models <- binsegRcpp::binseg_normal(subtrain.dt$logratio, 10)
subtrain.binseg.dt <- coef(subtrain.binseg.models)
subtrain.getPos <- function(subtrain.index){
orig.index <- subtrain.dt$index[ subtrain.index ]
pro.dt$position[ orig.index ]
}
subtrain.binseg.dt[, start_in_all_data := subtrain.getPos(subtrain.binseg.dt$start)]
subtrain.binseg.dt[, end_in_all_data := subtrain.getPos(subtrain.binseg.dt$end)]
subtrain.binseg.dt[, type := rep("subtrain", l=.N)]
head(subtrain.binseg.dt)
validation.binseg.models <- binsegRcpp::binseg_normal(validation.dt$logratio, 10)
validation.binseg.dt <- coef(validation.binseg.models)
validation.getPos <- function(validation.index){
orig.index <- validation.dt$index[ validation.index ]
pro.dt$position[orig.index ]
}
validation.binseg.dt[, start_in_all_data := validation.getPos(validation.binseg.dt$start)]
validation.binseg.dt[, end_in_all_data := validation.getPos(validation.binseg.dt$end)]
validation.binseg.dt[, type := rep("validation", l=.N)]
head(validation.binseg.dt)
total.dt <- rbind(subtrain.binseg.dt,validation.binseg.dt)
for(col.name in c("start_in_all_data", "end_in_all_data")){
col.value <- total.dt[[col.name]]
set(total.dt, j=paste0(col.name, ".pos"),
value=pro.dt$position[col.value])
}
total.dt[, end.before := c(NA, end_in_all_data[-.N]), by=.(type, segments) ]
change.dt <- data.table(pro.dt, total.dt[1 < start_in_all_data])
change.dt[, changepoint := (start_in_all_data+end.before)/2]
change.dt
gg <- ggplot(aes(x=position, y=logratio), data=pro.dt)+geom_point()
(gg+ facet_grid(segments ~ .)+
geom_segment(aes(
x=start, y=mean,
xend=end, yend=mean,
color=type),
data=total.dt) +
geom_vline(aes(
xintercept=end_in_all_data,
color=type),
data=change.dt)+
scale_size_manual(values=c(subtrain=2, validation=1))
)
subtrain.loss.dt<- data.table()
validation.loss.dt <- data.table()
subtrain.loss.dt[, loss := subtrain.binseg.models$loss]
subtrain.loss.dt[, segments := subtrain.binseg.models$segments]
subtrain.loss.dt[, type := "subtrain"]
validation.loss.dt[, loss := validation.binseg.models$loss]
validation.loss.dt[, segments := validation.binseg.models$segments]
validation.loss.dt[, type := "validation"]
loss.dt <- rbind(subtrain.loss.dt,validation.loss.dt)
ggplot()+
geom_line(aes(
segments, loss, color=type),
data=loss.dt)+
xlab("the number of segments") + ylab("the loss value")
binseg.models <- binsegRcpp::binseg_normal(pro.dt$logratio, 10)
binseg.models <- binsegRcpp::binseg_normal(pro.dt$logratio, 10)
AIC.criteria.dt<- data.table()
BIC.criteria.dt <- data.table()
AIC.criteria.dt[, criteria.value := binseg.models$loss + 2 * binseg.models$segments]
AIC.criteria.dt[, criteria.name := "AIC"]
BIC.criteria.dt[, criteria.value := binseg.models$loss + log(length(pro.dt$logratio)) * binseg.models$segments]
BIC.criteria.dt[, criteria.name := "BIC"]
(criteria.dt <- rbind(AIC.criteria.dt,BIC.criteria.dt))
binseg.models <- binsegRcpp::binseg_normal(pro.dt$logratio, 10)
AIC.criteria.dt<- data.table()
BIC.criteria.dt <- data.table()
AIC.criteria.dt[, criteria.value := binseg.models$loss + 2 * binseg.models$segments]
AIC.criteria.dt[, segments := binseg.models$segments]
AIC.criteria.dt[, criteria.name := "AIC"]
BIC.criteria.dt[, criteria.value := binseg.models$loss + log(length(pro.dt$logratio)) * binseg.models$segments]
BIC.criteria.dt[, segments := binseg.models$segments]
BIC.criteria.dt[, criteria.name := "BIC"]
(criteria.dt <- rbind(AIC.criteria.dt,BIC.criteria.dt))
ggplot()+
geom_line(aes(
segments, criteria.value, color=criteria.name),
data=criteria.dt)+
xlab("the number of segments") + ylab("the criteria value")
